calcData = [
    ["curId", "curTar", "curStep", "curNum"],
    [1, 8, 3, 0, "+2", "+3"],
    [2, 200, 4, 0, "+10", "*4"],
    [3, 24, 3, 2, "*2", "*3"],
    [4, 4, 4, 125, "<<", "*2"],
    [5, 5, 4, 125, "<<", "*2"],
    [6, 95, 3, 25, "push5", "+4", "/5"],
    [7, 59, 3, 25, "push5", "+4", "/5"],
    [8, 32, 4, 155, "push2", "*2", "<<"],
    [9, 24, 4, 155, "push2", "*2", "<<"],
    [10, 144, 3, 11, "push2", "*12", "<<"],
    [11, 3, 4, 15, "push6", "+5", "<<", "/7"],
    [12, 96, 3, 200, "push1", "+12", "*3", "<<"],
    [13, 63, 3, 200, "push1", "+12", "*3", "<<"],
    [14, 33, 4, 200, "push1", "+12", "*3", "<<"],
    [15, 62, 3, 550, "+6", "1=>2", "<<"],
    [16, 321, 4, 123, "2=>3", "13=>21"],
    [17, 1970, 3, 1985, "sort>", "*2", "<<"],
    [18, 1234, 3, 16, "sort>", "*2", "push7"],
    [19, 333, 4, 4321, "sort<", "2=>3", "1=>3", "<<"],
    [20, 275, 4, 97231, "sort<", "<<", "9=>5"],
    [21, 19, 3, 303, "sort<", "+1", "*3"],
    [22, 100, 3, 303, "sort<", "+1", "*3"],
    [23, 111, 4, 423, "sort<", "/2", "<<", "push1"],
    [24, 123, 4, 423, "sort<", "/2", "<<", "push1"],
    [25, 963, 4, 30, "sort>", "/5", "+6", "push3"],
    [26, 321, 4, 30, "sort>", "/5", "+6", "push3"],
    [27, 4, 3, 3, "+4", "*4", "/4"],
    [28, 5, 3, 4, "+3", "*3", "/3"],
    [29, 9, 4, 50, "/5", "*3", "<<"],
    [30, 100, 3, 99, "-8", "*11", "<<"],
    [31, 23, 4, 171, "*2", "-9", "<<"],
    [32, 24, 6, 0, "+5", "*3", "*5", "<<"],
    [33, 2, 5, 0, "+4", "*9", "<<"],
    [34, 9, 4, 0, "+2", "/3", "push1"],
    [35, 10, 4, 15, "push0", "+2", "/5"],
    [36, 93, 4, 0, "+6", "*7", "6=>9"],
    [37, 2321, 6, 0, "push1", "push2", "1=>2", "2=>3"],
    [38, 24, 5, 0, "+9", "*2", "8=>4"],
    [39, 29, 5, 11, "/2", "+3", "1=>2", "2=>9"],
    [40, 20, 5, 36, "+3", "/3", "1=>2"],
    [41, 15, 4, 2, "/3", "push1", "*2", "4=>5"],
    [42, 414, 4, 1234, "23=>41", "24=>14", "12=>24","14=>2"],
    [43, -85, 4, 0, "+6", "push5", "-7"],
    [44, 9, 3, 0, "-1", "-2", "^2"],
    [45, -13, 4, 0, "+3", "-7", "+/-"],
    [46, 52, 5, 44, "+9", "/2", "*4", "+/-"],
    [47, 10, 5, 9, "+5", "*5", "+/-"],
    [48, 12, 5, 14, "push6", "+5", "/8", "+/-"],
    [49, 13, 4, 55, "+9", "+/-", "<<"],
    [50, 245, 5, 0, "-3", "push5", "*4", "+/-"],
    [51, 126, 6, 111, "*3", "-9", "+/-", "<<"],
    [52, 3, 5, 34, "-5", "+8", "/7", "+/-"],
    [53, 4, 5, 25, "-4", "*-4", "/3", "/8"],
    [54, 101, 3, 100, "push1", "+9", "rev"],
    [55, 51, 3, 0, "+6", "+9", "rev"],
    [56, 101, 3, 100, "push1", "+9", "rev"],
    [57, 100, 4, 1101, "-1", "rev"],
    [58, 58, 4, 0, "+4", "*4", "-3", "rev"],
    [59, 21, 3, 15, "+9", "*5", "rev"],
    [60, 13, 5, 100, "/2", "rev"],
    [61, 102, 4, 0, "push10", "*4", "+5", "rev"],
    [62, 7, 4, 0, "push2", "+1", "/3", "rev"],
    [63, 9, 5, 8, "*3", "push1", "/5", "rev"],
    [64, 13, 5, 0, "+7", "+8", "+9", "rev"],
    [65, 123, 6, 0, "+3", "push1", "-2", "rev"],
    [66, 424, 5, 0, "push6", "+8", "rev"],
    [67, 81, 5, 7, "-9", "*3", "+4", "+/-", "rev"],
    [68, -43, 5, 0, "-5", "+7", "-9", "rev"],
    [69, 28, 7, 0, "+6", "-3", "rev", "<<"],
    [70, 136, 5, 0, "push1", "+2", "*3", "rev"],
    [71, -25, 5, 0, "+4", "rev", "+/-", "*3"],
    [72, -5, 5, 0, "+7", "*3", "rev", "+/-"],
    [73, 41, 4, 88, "/4", "-4", "rev"],
    [74, 101, 5, 100, "push0", "*2", "2=>10", "0=>1", "rev"],
    [75, 424, 7, 0, "/2", "push5", "5=>4", "rev"],
    [76, 100, 5, 99, "push9", "/9", "rev", "1=>0"],
    [77, 30, 5, 8, "push2", "-4", "2=>3", "rev"],
    [78, 222, 5, 101, "-1", "rev", "0=>2"],
    [79, 500, 5, 36, "*4", "/3", "1=>5", "rev"],
    [80, 196, 8, 0, "push1", "+12", "*13", "rev", "<<"],
    [81, 101, 5, 50, "1=>10", "+50", "rev", "5=>1"],
    [82, 2048, 6, 1, "push2", "*4", "*10", "rev"],
    [83, 123, 5, 12, "push12", "+1", "12=>2", "rev"],
    [84, 55, 6, 86, "+2", "+14", "rev", "0=>5"],
    [85, 4, 3, 1231, "sum", "3=>1", "2=>3"],
    [86, 45, 5, 0, "*9", "push4", "*3", "3=>5", "sum"],
    [87, 28, 5, 424, "*4", "4=>6", "sum"],
    [88, 8, 4, 3, "push3", "+33", "sum", "3=>1"],
    [89, 44, 4, 24, "/2", "push4", "1=>2", "sum"],
    [90, 143, 4, 142, "*9", "+9", "44=>43", "sum"],
    [91, 1, 5, 24, "/3", "*4", "5=>10", "sum"],
    [92, 100, 5, 4, "push3", "*3", "+1", "sum"],
    [93, 8, 5, 93, "+4", "*3", "sum"],
    [94, 16, 5, 5, "*5", "/2", "sum", "5=>2"],
    [95, 64, 4, 128, "*4", "/4", "sum", "5=>16"],
    [96, 121, 6, 59, "push1", "*5", "15=>51", "sum"],
    [97, 5, 6, 18, "*2", "/3", "12=>21", "sum"],
    [98, 30, 4, 9, "-5", "*-6", "+/-", "sum"],
    [99, -17, 5, 105, "-5", "/5", "*4", "+/-", "sum"],
    [100, 11, 6, 36, "-6", "/3", "+/-", "sum"],
    [101, 64, 5, 3, "+3", "sum", "^3", "0=>1"],
    [102, 11, 5, 2, "*2", "push10", "sum", "^3", "10=>1"],
    [103, 121, 3, 101, "+2", "shift>", "<shift"],
    [104, 1999, 4, 98, "push1", "push9", "89=>99", "shift>"],
    [105, 129, 4, 70, "*3", "push9", "shift>"],
    [106, 210, 5, 120, "+1", "<shift", "+/-"],
    [107, 210, 5, 1001, "+2", "shift>", "12=>0"],
    [108, 501, 3, 100, "+5", "push0", "<shift"],
    [109, 3, 4, 212, "+11", "3=>1", "sum", "<shift"],
    [110, 121, 4, 356, "-2", "/3", "shift>"],
    [111, 13, 6, 2152, "25=>12", "21=>3", "12=>5", "shift>", "rev"],
    [112, 520, 5, 1025, "shift>", "50=>0", "25=>525", "51=>5"],
    [113, 19, 6, 91, "+5", "mir", "sum"],
    [114, 116, 4, 22, "-3", "push6", "mir", "sum"],
    [115, 20, 7, 125, "6=>2", "push0", "mir", "sum"],
    [116, 3, 4, 22, "sum", "/2", "mir", "<<"],
    [117, 1111, 5, 0, "+2", "*6", "mir", "21=>11"],
    [118, 2020, 8, -1, "*3", "+8", "+2", "rev", "mir"],
    [119, 112, 6, 13, "99=>60", "/3", "*3", "mir", "shift>"],
    [120, 18, 5, 140, "-3", "+9", "/12", "mir", "<<"],
    [121, 33, 4, 17, "*2", "-4", "mir", "<shift"],
    [122, 20, 7, 125, "mir", "sum"],
    [123, 14, 4, 0, "push1", "+2", "[+]1"],
    [124, 101, 5, 0, "push2", "+5", "[+]2"],
    [125, 28, 5, 0, "push1", "+2", "[+]3"],
    [126, 42, 5, 0, "-2", "+5", "*2", "[+]1"],
    [127, 25, 5, 0, "+2", "*3", "-3", "[+]2"],
    [128, 41, 4, 5, "+4", "+8", "*3", "[+]2"],
    [129, 31, 5, 33, "*4", "+2", "+3", "[+]1", "sum"],
    [130, 268, 5, 25, "+8", "*2", "*5", "[+]1"],
    [131, 121, 4, 0, "+1", "store"],
    [132, 122, 4, 12, "store", "rev", "<<"],
    [133, 17, 5, 0, "+2", "/3", "rev", "store"],
    [134, 1234, 4, 23, "*2", "-5", "store", "<shift"],
    [135, 1025, 6, 125, "*2", "store", "<<"],
    [136, 115, 5, 23, "-8", "store", "+/-"],
    [137, 16, 4, 15, "store", "11=>33", "rev", "sum"],
    [138, 61, 7, 0, "push5", "<<", "sum", "store"],
    [139, 101, 5, 0, "*6", "push5", "shift>", "store", "3=>1"],
    [140, 12525, 5, 125, "push1", "/5", "rev", "store"],
    [141, 17, 6, 70, "8=>1", "/2", "push0", "store", "sum"],
    [142, 101, 4, 12, "21=>0", "12=>1", "store", "mir"],
    [143, 3001, 7, 9, "39=>93", "/3", "store", "31=>00"],
    [144, 2, 3, 1, "-1", "inv10"],
    [145, 15, 3, 14, "+5", "*5", "inv10"],
    [146, 12, 3, 21, "-7", "*5", "inv10"],
    [147, 13, 4, 67, "+3", "rev", "inv10"],
    [148, 88, 5, 23, "-4", "-2", "rev", "inv10"],
    [149, 105, 4, 5, "*3", "/9", "store", "inv10"],
    [150, 23, 4, 24, "+6", "*3", "rev", "inv10"],
    [151, 17, 4, 7, "+3", "*3", "*4", "inv10"],
    [152, 21, 5, 35, "*9", "/5", "13=>10", "inv10"],
    [153, 18, 5, 9, "*3", "sum", "inv10"],
    [154, 101, 5, 12, "+4", "inv10", "sum"],
    [155, 99, 6, 26, "push2", "sum", "inv10"],
    [156, 13, 7, 15, "sum", "inv10", "mir"],
    [157, 99, 6, 78, "1=>6", "6=>11", "/6", "inv10", "rev"],
    [158, 9, 4, 34, "*6", "inv10", "<<"],
    [159, 872, 8, 0, "push8", "88=>34", "inv10", "<<"],
    [160, 33, 5, 5, "*7", "+8", "-9", "*2", "inv10"],
    [161, 23, 4, 12, "*5", "sum", "store", "inv10"],
    [162, 1991, 4, 1, "store", "inv10"],
    [163, 26, 4, 12, "<<", "sum", "store", "inv10"],
    [164, 48, 6, 51, "+6", "*3", "inv10", "rev", "4=>6"],
    [165, 1, 6, 0, "+5", "*3", "/6", "inv10", "rev"],
    [166, 777, 5, 369, "99=>63", "63=>33", "inv10", "36=>93", "39=>33"],
    [167, 10, 3, 99, "push1", "-1"],
    [168, 64, 2, 9, "push4", "push6"],
    [169, 35, 3, 50, "+5", "*3", "*5"],
    [170, 131, 4, 306, "push3", "+1", "*2"],
    [171, 123, 5, 321, "/2", "push1", "push3", "push0"],
    [172, 150, 4, 525, "+1", "push6", "push7", "/2"],
    [173, 212, 4, 301, "push10", "-2", "push3"],
    [174, 13, 4, 99, "sum", "mir", "inv10"],
    [175, 822, 5, 25, "mir", "push5", "store", "<<"],
    [176, 516, 4, 45, "+10", "mir", "rev"],
    [177, 212, 4, 238, "28=>21", "-5", "inv10", "shift>"],
    [178, 90, 5, 58, "*6", "inv10", "shift>"],
    [179, 500, 5, 189, "+8", "*4", "push9", "inv10", "7=>0"],
    [180, 321, 4, 234, "push9", "+9", "53=>32"],
    [181, 123, 4, 333, "push1", "push3", "/2", "[+]1"],
    [182, 777, 3, 613, "push5", "*2", "+3", "rev", "inv10"],
    [183, 550, 6, 60, "+5", "*5", "push2", "inv10"],
    [184, 4321, 5, 1234, "24=>13", "12=>32", "13=>21", "23=>32", "23=>43"],
    [185, 750, 6, 4, "+6", "push4", "*3", "inv10"],
    [186, 3507, 6, 3002, "push7", "3=>5", "inv10", "shift>"],
    [187, 21, 3, 0, "+15", "sum"],
    [188, 1, 3, 20, "cut1", "*5", "+1"],
    [189, 2, 3, 33, "cut1", "+3", "*3"],
    [190, 6, 4, 4454, "cut4", "+2", "+4", "<<"],
    [191, 72, 3, 6996, "+3", "cut9"],
    [192, 15, 3, 12345, "cut1", "/3"],
    [193, 2, 5, 99999, "cut1", "9=>3", "3=>1", "-8"],
    [194, 123, 2, 10203, "(del)"],
    [195, 40, 3, 55, "*2", "*4", "(del)"],
    [196, 234, 2, 4, "(insert2)", "(insert3)", "(insert34)"],
    [197, 48, 3, 14, "(del)", "(insert2)", "*2"],
    [198, 120, 3, 1, "(insert2)", "*5", "*4"],
    [199, 45, 3, 3, "+2", "*3", "(insert1)"],
    [200, 7, 3, 4505, "(insert2)", "cut5", "+2", "(del)"],
    [201, 3, 3, 64, "rev", "-2", "/2"],
    [202, 21, 3, 64, "rev", "-2", "/2"],
    [203, 52, 4, 12, "rev", "*5", "(del)"],
    [204, 15, 3, 12, "rev", "*5", "(del)"],
    [205, 555, 3, 125, "rev", "2=>5", "+1"],
    [206, 11, 4, 84, "rev", "+2", "cut4", "(insert1)"],
    [207, 2, 4, 84, "rev", "+2", "cut4", "(insert1)"],
    [208, 200, 2, 10, "(round)", "(insert5)"],
    [209, 1000, 2, 90, "(round)", "(insert5)"],
    [210, 40, 3, 24, "(round)", "4=>3", "*2"],
    [211, 500, 2, 2150, "(round)", "rev"],
    [212, 1600, 3, 35, "(round)", "*5", "5=>12"],
    [213, 44, 3, 352, "(round)", "rev", "push4"],
    [214, 900, 3, 2189, "(round)", "rev", "+1"],
    [215, 2222, 2, 2024, "(+2)", "(-2)"],
    [216, 18, 3, 21, "(+2)", "4=>8", "rev"],
    [217, 136, 3, 100, "(+2)", "+8"],
    [218, 0, 2, 25, "(+5)", "+25"],
    [219, 90, 3, 12, "(+4)", "*4", "+2"],
    [220, 1000, 3, 555, "(+9)", "*2"],
    [221, 900, 3, 555, "(+9)", "*2"],
    [222, 250, 4, 50, "(+4)", "(del)", "(insert1)", "*4"],
    [223, 500, 4, 50, "(+4)", "(del)", "(insert1)", "*4"],
    [224, 3456, 4, 650, "(-2)", "(insert3)"],
    [225, 1750, 4, 1990, "(+8)", "(del)", "(+5)", "(round)"],
    [226, 150, 4, 1990, "(+8)", "(del)", "(+5)", "(round)"],
    [227, -6, 4, 62, "+/-", "(+2)", "-12"],
    [228, -12, 4, 208, "+/-", "+2", "(del)", "/2"],
    [229, -8, 5, 47, "+/-", "+5", "/2"],
    [230, 14, 5, 10, "+/-", "+8", "*3"],
    [231, 66, 5, 10, "+/-", "+8", "*3"],
    [232, 40, 5, 41, "+/-", "push1", "<<", "+2"],
    [233, 21, 5, 41, "+/-", "push1", "<<", "+2"],
    [234, 151, 3, 121, "(move)", "+3"],
    [235, 5, 3, 84, "(move)", "+2"],
    [236, 125, 2, 215, "(move)", "rev"],
    [237, 678, 3, 918, "(move)", "<<", "1=>67"],
    [238, 306, 2, 1206, "(move)", "/2"],
    [239, 22, 3, 55, "(move)", "*2"],
    [240, 102, 4, 214, "(move)", "-1", "/2"],
    [241, 25, 4, 5252, "(move)", "cut1", "25=>15", "52=>12"],
    [242, 305, 5, 152, "(move)", "+2", "rev", "(round)"],
    [243, 0, 3, 1213, "sum", "cut1", "+4"],
    [244, 8, 4, 1111, "sum", "*4", "push1"],
    [245, 35, 5, 5000, "sum", "rev", "+4"],
    [246, 1199, 5, 90, "mir", "<shift", "push10"],
    [247, 2112, 4, 123, "mir", "sum", "rev"],
    [248, 1000, 4, 201, "mir", "rev", "cut2", "-1"],
    [249, 3223, 4, 9933, "mir", "cut1", "/3", "31=>2"],
    [250, 275, 5, 2, "mir", "rev", "*5"],
    [251, 360, 5, 10, "[+]1", "*2"],
    [252, 15, 5, 3, "[+]1", "+2", "mir", "sum"],
    [253, 20, 5, 10, "[+]2", "*3", "cut1"],
    [254, 123, 3, 82, "[+]1", "/2", "*2"],
    [255, 6, 5, 13, "[+]1", "(+2)", "43=>2"],
    [256, 1, 5, 222, "[+]2", "(insert3)", "sum", "56=>10"],
    [257, 501, 1, 101, "(rep5)", "(rep55)"],
    [258, 22, 4, 65, "(rep6)", "(+1)", "+5", "/5"],
    [259, 64, 4, 20, "(rep6)", "mir", "sum"],
    [260, 332, 3, 144, "(rep1)", "/3", "inv10"],
    [261, 321, 3, 144, "(rep1)", "/3", "inv10"],
    [262, 82, 4, 108, "(rep8)", "+2", "sum", "mir"],
    [263, 32, 4, 108, "(rep8)", "+2", "sum", "mir"],
    [264, 181, 4, 108, "(rep8)", "+2", "sum", "mir"],
    [265, 9, 4, 410, "inv10", "*3", "sum", "<<"],
    [266, 7, 3, 13, "inv10", "/5", "3=>5"],
    [267, 19, 3, 13, "inv10", "/5", "3=>5"],
    [268, 13, 4, 180, "inv10", "sort<", "+2", "rev"],
    [269, 8, 4, 180, "inv10", "sort<", "+2", "rev"],
    [270, 50, 4, 154, "inv10", "9=>5", "+6", "(del)"],
    [271, 40, 3, 154, "inv10", "9=>5", "+6", "(del)"],
    [272, 1, 3, 369, "inv10", "sum", "+2"],
    [273, 99, 4, 369, "inv10", "sum", "+2"],
    [274, 80, 3, 369, "inv10", "sum", "+2"],
    [275, 66, 4, 145, "inv10", "sum", "*3", "(rep2)"],
    [276, 40, 4, 145, "inv10", "sum", "*3", "(rep2)"],
    [277, 60, 3, 475, "inv10", "<<", "(rep2)", "(round)"],
    [278, 70, 4, 475, "inv10", "<<", "(rep2)", "(round)"],
    [279, 80, 4, 475, "inv10", "<<", "(rep2)", "(round)"],
    [280, 18, 4, 8, "STORE", "+2", "<<"],
    [281, 101, 4, 8, "STORE", "+2", "<<"],
    [282, 1212, 5, 33, "STORE", "sum"],
    [283, 126, 5, 33, "STORE", "sum"],
    [284, 12, 4, 10, "STORE", "(+5)", "sum"],
    [285, 710, 5, 10, "STORE", "(+5)", "sum"],
    [286, 2112, 4, 123, "STORE", "rev", "<<"],
    [287, 131, 5, 118, "STORE", "+2", "<<"],
    [288, 33, 6, 118, "STORE", "+2", "<<"],
    [289, 123, 6, 118, "STORE", "+2", "<<"],
    [290, 25, 2, 15, "(lock)", "+12"],
    [291, 28, 2, 125, "(lock)", "sum"],
    [292, 108, 2, 125, "(lock)", "sum"],
    [293, 2400, 3, 1975, "(lock)", "(round)", "(+5)"],
    [294, 7070, 3, 1975, "(lock)", "(round)", "(+5)"],
    [295, 2222, 3, 12, "(lock)", "mir", "rev"],
    [296, 13, 4, 35, "(lock)", "(insert7)", "sum"],
    [297, 9, 4, 35, "(lock)", "(insert7)", "sum"],
    [298, 48, 5, 2222, "(lock)", "cut2", "/5"],
    [299, 21, 2, 55, "push5", "*2"],
    [300, 16, 2, 55, "push5", "*2"],
    [301, 121, 4, 14, "mir", "push1", "sum"],
    [302, 111, 4, 14, "mir", "push1", "sum"],
    [303, 992, 2, 91, "inv10", "STORE", "mir"],
    [304, 920, 3, 91, "inv10", "STORE", "mir"],
    [305, 2, 4, 91, "inv10", "STORE", "mir"],
    [306, 525, 5, 15, "inv10", "STORE", "<<"],
    [307, 220, 5, 15, "inv10", "STORE", "<<"],
    [308, 78, 2, 77, "mir", "(rep4)", "<<", "sum"],
    [309, 99, 4, 77, "mir", "(rep4)", "<<", "sum"],
    [310, 2, 3, 77, "mir", "(rep4)", "<<", "sum"],
    [311, 500, 3, 77, "mir", "(rep4)", "<<", "sum"],
    [312, 860, 4, 77, "mir", "(rep4)", "<<", "sum"],
    [313, 456, 4, 77, "mir", "(rep4)", "<<", "sum"],
    [314, 888, 4, 77, "mir", "(rep4)", "<<", "sum"],
    [315, 93, 5, 9, "push9", "push1", "sort<", "cut0", "(insert2)"],
    [316, 131, 6, 9, "push9", "push1", "sort<", "cut0", "(insert2)"],
    [317, 1, 4, 9, "push9", "push1", "sort<", "cut0", "(insert2)"],
    [318, 9933, 6, 9, "push9", "push1", "sort<", "cut0", "(insert2)"],
    [319, 31, 6, 9, "push9", "push1", "sort<", "cut0", "(insert2)"]
]


totalData = 319


uTrans = {
    167: 1,
    168: 2,
    169: 2,
    170: 1,
    171: 1,
    172: 1,
    173: 1,
    174: 2,
    175: 2,
    176: 2,
    179: 1,
    180: 1,
    181: 1,
    182: 1,
    183: 2,
    185: 2,
    186: 1,
    299: 1,
    300: 1,
    301: 1,
    302: 1,
    303: 1,
    304: 1,
    305: 1,
    306: 1,
    307: 1,
    308: 1,
    309: 1,
    310: 1,
    311: 1,
    312: 1,
    313: 1,
    314: 1,
    315: 1,
    316: 1,
    317: 1,
    318: 1,
    319: 1
}


dTrans = {
    167: 3,
    168: 3,
    169: 3,
    170: 4,
    171: 4,
    172: 4,
    173: 4,
    174: 4,
    175: 4,
    176: 4,
    179: 4,
    180: 4,
    181: 4,
    182: 4,
    183: 4,
    185: 4,
    186: 5,
    299: 3,
    300: 3,
    301: 4,
    302: 4,
    303: 4,
    304: 4,
    305: 4,
    306: 4,
    307: 4,
    308: 4,
    309: 4,
    310: 4,
    311: 4,
    312: 4,
    313: 4,
    314: 4,
    315: 5,
    316: 5,
    317: 5,
    318: 5,
    319: 5
}


specialOpt = ["(del", "(insert", "(round", "(+", "(-", "(move", "(rep", "(lock"]


gameHelp = f"""目前共有 {totalData} 关。

游戏玩法：通过给出的操作方式由当前数字达到计算目标，分步直接发送给定的操作方式。
在每次操作结束后，负数保留负号，负号放在最前面；数字保留最多八位，超过八位判定为游戏失败。
发送无法与给定操作方式匹配的内容将不会有任何回应。

约定：“操作数字”表示操作方式中的数字。
“数码”表示当前数字的某一位数，例如百位数。
在帮助信息显示的操作方式中，# 表示操作数字。如不加说明，所有操作消耗步数均为 1。

外围带 () 的操作方式表示光标操作，发送此操作方式时需要在括号外面添加数字表示光标位置。
例如某局游戏有操作 (+1)，你发送了 (+1)1，其中第二个 1 代表光标位置。光标范围在帮助信息中有规定。
约定字母 n 代表当前数字的位数，1~n 依次代表个位，十位，……

如果当前数字上下方带有 = 标记，则表示数字传送门。保证只会最多存在一对上下传送门。
在每次操作结束后，下方带 = 的数码（下传送门所在的数码）消失，与上传送门所在的数码相加。
之后，先补齐空位（空位由更高位数字充当）再进位，持续操作。
教程关为 168。"""


helpMsg = [

"""操作 +#, -#, *#, /#, ^#
   加减乘除以及乘方操作。除要求必须整除，否则拒绝此次操作。
""",
"""操作 <<
   删除末位数码。删空则认为当前数字为 0。
""",
"""操作 push#
   当前数字末尾插入操作数字。
""",
"""操作 #=>#
   当前数字中，与第一个操作数字相等的数码段替换为第二个操作数字（即子串替换）。两个操作数字不一定同位数。
   例如：12=>3 可以将当前数字 123 转换为 33。
""",
"""操作 sort> 和 sort<
   两个操作分别是将当前数字转换为当前数字的所有数码从大到小/从小到大排序后组成的数字。
   例如：sort> 可以将当前数字 213 转换为 321。
""",
"""操作 +/-
   切换当前数字的正负状态。
""",
"""操作 rev
   将当前数字转换为当前数字的镜像。
   例如：rev 可以将当前数字 2413 转换为 3142。
""",
"""操作 sum
   将当前数字转换为当前数字的所有数码相加的和。
   例如：sum 可以将当前数字 2413 转换为 10。
""",
"""操作 cut#
   将当前数字中与操作数字相等的数码段清空，并补足空位。
   例如：cut41 可以将当前数字 2413 转换为 23。
""",
"""操作 <shift 和 shift>
   两个操作分别是整体向左/向右移动当前数字的数码（认为最高位与最低位相邻）。
   例如：<shift 可以将当前数字 2413 转换为 4132。
""",
"""操作 mir
   将当前数字的末尾插入当前数字的镜像。
   例如：mir 可以将当前数字 12 转换为 1221。
""",
"""操作 inv10
   用 10 减去当前数字的每个数码（认为 0-10=0）。
   例如：inv10 可以将当前数字 620 转换为 480。
""",
"""操作 [+]#
   注意，此操作不更改当前数字，而是更改操作方式。
   如果当前游戏的操作方式出现了下面列出的操作，则将其操作数字加上 # 代表的数字。
   此操作方式可以修改：+# -# *# /# ^# push# (+#) (-#) (insert#)
   例如：[+]1 可以将操作方式 *2 转换为 *3。
""",
"""操作 store
   注意，此操作方式不消耗步数。不能存储负数。
   当前游戏中，存储当前数字，即添加或修改一个操作方式 stored#（# 表示执行此操作方式时的当前数字）。

操作 STORE
   保证每局游戏此操作不会与操作 store 同时出现。
   除了此操作方式消耗步数 1 之外与 store 相同。
   趣事：由于原作一代二代此操作消耗步数的设置不同，故这样规定。

操作 stored#
   保证每局游戏此操作最多出现一次。操作数字 # 仅由操作方式 store 或 STORE 决定。
   等同于执行操作方式 push#。
""",
"""光标操作 (del)
   删除任意的一位数码。教程关为 194。
   光标表示要删除的数码位置，光标范围为 [1,n]。
""",
"""光标操作 (insert#)
   添加操作数字至任意位置。教程关为 196。
   光标表示操作数字添加在当前数字的某位数码后面，光标范围为 [1,n+1]。
   特别地，n+1 代表添加在整个当前数字的前面；如果当前数字为 0 则光标只能取 1。
""",
"""光标操作 (round)
   从任意位置起，将后面的数码段当作整体四舍五入。教程关为 208。
   光标表示选定的位置，光标范围为 [2,n]。
""",
"""光标操作 (+#)
   将当前数字的任意数码加上一个数，之后这个数码对 10 取余数。教程关为 215。
   光标表示要进行相加操作的数码位置，光标范围为 [1,n]。
""",
"""光标操作 (-#)
   将当前数字的任意数码减去一个数，之后这个数码对 10 取余数。教程关为 215。
   光标表示要进行相减操作的数码位置，光标范围为 [1,n]。
""",
"""光标操作 (move)
   将当前数字的数码整体向左/向右移动任意次（认为最高位与最低位相邻）。教程关 234。
   光标表示移动的次数，光标范围为 [-n,-1]U[1,n]，正数表示向左，负数表示向右。
""",
"""光标操作 (rep#)
   替换当前数字的任意位置的数码。教程关 257。
   光标表示替换的数码位置，光标范围为 [1,n]。
""",
"""光标操作 (lock)
   锁定一步数当前数字的任意位置数码，使之不会被任何操作改变（例外是 mir 和除了 (round) 之外的所有光标操作）。教程关 290。
   被锁定的数码下方会带有 * 标记。
   光标表示被锁定的数码位置，光标范围为 [1,n]。
"""
]


midFormat = "当前数字：{}\n计算目标：{}\n剩余步数： {}\n操作方式： {}"


midTransFormat = "传送过程： {}\n{}\n当前数字：{}\n{}\n计算目标：{}\n剩余步数： {}\n操作方式： {}"


midLockFormat = "当前数字：{}\n{}\n计算目标：{}\n剩余步数： {}\n操作方式： {}"


startFormat = "当前数字：{}\n计算目标：{}\n剩余步数： {}\n操作方式： {}\n\n进行操作直接发送相应操作方式。\n查看帮助输入“帮助”\n退出游戏输入“退出”"


startTransFormat = "{}\n当前数字：{}\n{}\n计算目标：{}\n剩余步数： {}\n操作方式： {}\n\n进行操作直接发送相应操作方式。\n查看帮助输入“帮助”\n退出游戏输入“退出”"